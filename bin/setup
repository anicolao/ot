#!/bin/bash

function login {
  account=$(gcloud config list account --format "value(core.account)")
  if test -z "$account"
  then
    gcloud auth login
  else
    echo "Logged in as $account"
  fi
}

function start_cloudshell {
  gcloud cloud-shell ssh --command 'echo Cloudshell instance started.'
}

function add_authorized_keys_to_cloudshell {
  cloudshell_ssh_config_file=$1
  identity_file=$2

  authorized_keys_file=/tmp/authorized_keys.$$
  project_authorized_keys_url=https://raw.githubusercontent.com/anicolao/ot/main/access/authorized_keys

  gcloud cloud-shell scp --scp-flag=-q cloudshell:/etc/ssh/keys/authorized_keys localhost:$authorized_keys_file
  curl -s $project_authorized_keys_url >> $authorized_keys_file
  gcloud cloud-shell scp --scp-flag=-q localhost:$authorized_keys_file cloudshell:/tmp/authorized_keys
  ssh -F $cloudshell_ssh_config_file $identity_file cloudshell 'sudo cp /tmp/authorized_keys /etc/ssh/keys/authorized_keys'
  ssh -F $cloudshell_ssh_config_file $identity_file cloudshell 'cat /tmp/authorized_keys .ssh/authorized_keys | sort -u > .ssh/authorized_keys'
}

function write_cloudshell_ssh_config_file {
  config_file=$1

  mount_command_output=$(gcloud cloud-shell get-mount-command /tmp)
  echo $mount_command_output |
    sed -re 's/[^A-Za-z0-9.\/_=]+/|/g' |
    awk -F\| '{
      print "Host *cloudshell*";
      print "  HostName "$3
      print "  Port "$6
      print "  User "$2
      print "  StrictHostKeyChecking=no"
      print "  ForwardAgent=yes"
      print "  AddKeysToAgent=yes"
      print ""
      print "Host *ot*";
      print "  ProxyJump cloudshell"
      print "  HostName localhost"
      print "  Port 2222"
      print "  User dev"
      print "  StrictHostKeyChecking=no"
      print "  UserKnownHostsFile=/Users/anicolao/.ssh/ot.hostkey"
      print "  ForwardAgent=yes"
      print "  AddKeysToAgent=yes"
    }' > $config_file
}

function get_gce_identity_file {
  echo $(gcloud cloud-shell get-mount-command /tmp | awk '{ print $6 }')
}

cloudshell_ssh_config_file=~/.ssh/cloudshell.config
login
start_cloudshell
write_cloudshell_ssh_config_file $cloudshell_ssh_config_file
add_authorized_keys_to_cloudshell $cloudshell_ssh_config_file $(get_gce_identity_file)

cat $cloudshell_ssh_config_file | pbcopy
echo
echo "Send this configuration to your collaborator (it is on your clipboard): "
echo
pbpaste
echo
echo "Logging into your cloudshell instance..."
echo
if test -z "$SSH_AUTH_SOCK"
then
  echo "ssh agent is not running. Setup is incomplete. Try: "
  echo
  echo agentup
  echo ssh -A -F $cloudshell_ssh_config_file cloudshell
else
	ssh -A -F $cloudshell_ssh_config_file cloudshell '(cd ot/.dev; docker build -q -t ot .)'
	ssh -A -F $cloudshell_ssh_config_file cloudshell 'docker run -d --rm --name ot --publish 2222:22 -i -v /var/run/docker.sock:/var/run/docker.sock -v ${PWD}/ot:/home/dev/ot --mount type=bind,source=${PWD}/.ssh,target=/home/dev/.ssh ot'
	ssh -F ~/.ssh/cloudshell.config -A cloudshell ssh-keyscan -H -p 2222 localhost 2>/dev/null  >~/.ssh/ot.hostkey
  ssh -A -F $cloudshell_ssh_config_file ot -L 4444:localhost:22 -R 4444:localhost:22
fi

