#!/bin/bash
ROOT=${0%/*}/..
export TMP_KEYS=/tmp/authorized_keys.$$
export SSH_KEYS=https://raw.githubusercontent.com/anicolao/ot/main/access/authorized_keys
export SSH_CONFIG=~/.ssh/cloudshell.config
export MOUNT_COMMAND=/tmp/cloud-shell-mount.$$
export ACCOUNT=$(gcloud config list account --format "value(core.account)")
if test -z "$ACCOUNT"
then
	gcloud auth login
else
	echo "Logged in as $ACCOUNT"
fi
gcloud cloud-shell scp cloudshell:/etc/ssh/keys/authorized_keys localhost:$TMP_KEYS
gcloud cloud-shell get-mount-command /tmp > $MOUNT_COMMAND
curl -s $SSH_KEYS >> $TMP_KEYS
gcloud cloud-shell scp localhost:$TMP_KEYS cloudshell:/tmp/authorized_keys 
cat $MOUNT_COMMAND | 
	sed -re 's/[^A-Za-z0-9.\/_=]+/|/g' | 
	awk -F\| '{ 
	  print "Host *cloudshell*";
	  print "  HostName "$3 
	  print "  Port "$6 
	  print "  User "$2 
	  print "  StrictHostKeyChecking=no"
	}' > $SSH_CONFIG
IDENTITY_FILE=`cat $MOUNT_COMMAND | awk '{ print $6 }'`
ssh -F $SSH_CONFIG $IDENTITY_FILE cloudshell 'sudo cp -v /tmp/authorized_keys /etc/ssh/keys/authorized_keys'
cat $SSH_CONFIG | pbcopy
echo
echo "Send this configuration to your collaborator (it is on your clipboard): "
echo
pbpaste
echo
echo "Logging into your cloudshell instance..."
echo
if test -z "$SSH_AUTH_SOCK"
then
	echo "ssh agent is not running. Try: "
	echo
	echo agentup
	echo ssh -A -F $SSH_CONFIG cloudshell
else
	ssh -A -F $SSH_CONFIG cloudshell
fi
