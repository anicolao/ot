#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib'

storage_dir ||= "#{Dir.home.chomp('/')}/.ot/".freeze.tap do |dir|
  FileUtils.mkdir_p(dir)
end

temp_filename = "#{storage_dir}temp-#{Process.pid}"
store_op = Operator.new(
  name: 'store',
  pipeline: ["tee #{temp_filename}", 'sha256sum -bz',
             "awk '{printf $1}'", 'tr -d "\n"']
)
fetch_op = Operator.new(
  name: 'fetch',
  pipeline: ["cat #{storage_dir}%<sha256sum>s"]
)

serialization_modifier_proc = proc do |sha256sum|
  dest_filename = "#{storage_dir}#{sha256sum}"
  if File.exist?(dest_filename)
    FileUtils.rm(temp_filename)
  else
    FileUtils.mv(temp_filename, dest_filename)
  end

  { name: fetch_op.name, pipeline: fetch_op.pipeline, args: { sha256sum: }, content: '' }
end

Cmds::Generic.exec(
  fwd_op: store_op, input_stream: $stdin.binmode,
  inv_op: fetch_op, serialization_modifier_proc:
)
